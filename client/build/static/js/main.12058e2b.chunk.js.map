{"version":3,"sources":["components/Home.js","components/TickerSearch.js","contexts/ContextProvider.js","components/TickerSearchmap.js","components/CPI.js","components/CPImap.js","components/Inflation.js","components/Inflationmap.js","components/TreasuryYield.js","components/TreasuryYieldmap.js","components/EcoIndicators.js","components/WatchList.js","components/WatchListmap.js","App.js","index.js"],"names":["Home","className","TickerSearch","props","style","border","padding","height","maxWidth","width","backgroundColor","x","Math","round","StockContext","React","createContext","StockContextProvider","useState","stockData","setStockData","companyName","setCompanyName","companyInfo","setCompanyInfo","isLoadingSD","setIsLoadingSD","isLoadingCN","setIsLoadingCN","isLoadingCI","setIsLoadingCI","ticker","setTicker","tickerData","axios","get","then","response","data","coName","coInfo","setWatchlist","useEffect","addTicker","setAddTicker","tickersForWatchlist","setTickersForWatchlist","res","catch","err","console","log","sdArray","forEachSD","Object","entries","forEach","key","val","push","mapSD","map","index","symbol","name","high","low","yearEnd","quarter","Provider","value","handleChange","event","target","prevInput","handleSubmit","addToWatchlist","post","prevTicker","deleteStockFromWatchlist","stockId","delete","filterWatchlist","filter","stock","_id","children","TickerSearchmap","context","useContext","onSubmit","preventDefault","placeholder","type","onChange","color","display","justifyContent","fontSize","onClick","borderSpacing","borderCollapse","margin","CPI","CPIvalue","item","date","CPImap","CPIarray","setCPIArray","mapCPI","Inflation","INFvalue","thing","INFarray","setINFArray","mapInf","TreasuryYield","TreasuryYieldmap","TYarray","setTYArray","mapTY","EcoIndicators","Inflationmap","WatchList","WatchListmap","list","App","to","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12058e2b.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./Home.css\"\n\nfunction Home() {\n    return (\n        <div className=\"home\">\n            <div className=\"aboutTradeView\">\n                <h3 >About TradeView</h3>\n            </div>\n            <p>Welcome to TradeView!</p>\n            <p>TradeView is the only website you need for doing your stock research.</p>\n            <p>At TradeView you can research stocks, look at the current economic indicators, and save a watchlist to quickly check out your favorite stocks.</p>\n            <p></p>\n        </div>\n    )\n}\n\nexport default Home","import React from \"react\"\n\nfunction TickerSearch(props) {\n    // const INFvalue = Math.round(props.thing.value * 1000) / 1000\n    // console.log(props.x)\n    return (\n          <tr>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px 0px\", \n                height: \"30px\",\n                maxWidth: \"160px\",\n                width: \"160px\", \n                backgroundColor: \"palevioletred\"}}> \n                \n                Date: {props?.x[0]}\n                \n            </td>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px 0px\", \n                height: \"30px\",\n                maxWidth: \"160px\",\n                width: \"160px\", \n                backgroundColor: \"palevioletred\"}}> \n                \n                Open: {Math.round(props.x[1][\"1. open\"])}\n\n            </td>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px 0px\", \n                height: \"30px\",\n                maxWidth: \"160px\",\n                width: \"160px\", \n                backgroundColor: \"palevioletred\"}}> \n\n                High: {Math.round(props.x[1][\"2. high\"])}\n\n            </td>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px 0px\", \n                height: \"30px\",\n                maxWidth: \"160px\",\n                width: \"160px\", \n                backgroundColor: \"palevioletred\"}}> \n\n                Low: {Math.round(props.x[1][\"3. low\"])}\n\n            </td>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px 0px\", \n                height: \"30px\",\n                maxWidth: \"160px\",\n                width: \"160px\", \n                backgroundColor: \"palevioletred\"}}> \n\n                Close: {Math.round(props.x[1][\"4. close\"])}\n\n            </td>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px 0px\", \n                height: \"30px\",\n                maxWidth: \"160px\",\n                width: \"160px\", \n                backgroundColor: \"palevioletred\"}}> \n\n                Volume: {props.x[1][\"6. volume\"]}\n\n            </td>\n        </tr>\n    )\n}\n\nexport default TickerSearch","import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport TickerSearch from \"../components/TickerSearch.js\"\n\nconst StockContext = React.createContext()\n\nconst StockContextProvider = (props) => {\n\n    const [stockData, setStockData] = useState({})\n    const [companyName, setCompanyName] = useState({})\n    const [companyInfo, setCompanyInfo] = useState([])\n    const [isLoadingSD, setIsLoadingSD] = useState(false)\n    const [isLoadingCN, setIsLoadingCN] = useState(false)\n    const [isLoadingCI, setIsLoadingCI] = useState(false)\n\n    const [ticker, setTicker] = useState({ticker: ''})\n    // let slice = JSON.stringify(ticker).slice(11, -2)\n\n    const handleChange = (event) => {\n        const {name, value} = event.target\n        setTicker(prevInput => ({...prevInput,  [ name ]: value}))\n    }\n    const handleSubmit = (event) => {\n        tickerData()\n        coName()\n        coInfo()\n    }\n\n    const tickerData = () => {\n        return (\n            axios.get(`https://www.alphavantage.co/query?function=TIME_SERIES_DAILY_ADJUSTED&symbol=${ticker.ticker}&apikey=HOEHM6SOJN8NYJWX` )\n                .then(response => {\n                    // console.log(\"time series daily\")\n                    // console.log(response.data)\n                    const data = response.data[\"Time Series (Daily)\"]\n                    setStockData(data)\n                    setIsLoadingSD(true)\n                    // console.log(data)\n                    // const tSymbol = response.data[\"Meta Data\"]\n                    // setTickerOnly(tSymbol)\n            })\n        )\n    }\n    const coName = () => {\n        return (\n            axios.get(`https://www.alphavantage.co/query?function=OVERVIEW&symbol=${ticker.ticker}&apikey=HOEHM6SOJN8NYJWX` )\n                .then(response => {\n                    // console.log(response.data)\n                    setCompanyName(response.data)\n                    setIsLoadingCN(true)\n                    // console.log(\"Company Name is finished\")\n            })\n        )\n    }\n    const coInfo = () => {\n        return (\n            axios.get(`https://www.alphavantage.co/query?function=GLOBAL_QUOTE&symbol=${ticker.ticker}&apikey=HOEHM6SOJN8NYJWX` )\n                .then(response => {\n                    // console.log(response.data)\n                    setCompanyInfo(response.data)\n                    setIsLoadingCI(true)\n                    // console.log(\"Company Info is finished\")\n                    // addToWatchlist()\n            })\n        )\n    }\n    // const [CPIarray, setCPIArray] = useState([])\n    // useEffect(() => {\n    //     axios.get(\"https://www.alphavantage.co/query?function=CPI&interval=monthly&apikey=HOEHM6SOJN8NYJWX\" )\n    //         .then(response => {\n    //             // console.log(response.data)\n    //             setCPIArray(response.data.data)\n    //         })\n    // }, [])\n    // const [INFarray, setINFArray] = useState([])\n    // useEffect(() => {\n    //     axios.get(\"https://www.alphavantage.co/query?function=INFLATION&apikey=HOEHM6SOJN8NYJWX\" )\n    //         .then(response => {\n    //             // console.log(response.data)\n    //             setINFArray(response.data.data)\n    //         })\n    // },[])\n    // const [TYarray, setTYArray] = useState([])\n    // useEffect(() => {\n    //     axios.get(\"https://www.alphavantage.co/query?function=TREASURY_YIELD&interval=monthly&maturity=10year&apikey=HOEHM6SOJN8NYJWX\" )\n    //         .then(response => {\n    //             // console.log(response.data)\n    //             setTYArray(response.data.data)\n    //         })\n    // },[])\n    const [watchlist, setWatchlist] = useState([])\n    useEffect(() => {\n        axios.get(\"/watchlist\")\n            .then(response => {\n                // console.log(response.data)\n                setWatchlist(response.data)\n            })\n    }, [])\n\n    const [addTicker, setAddTicker] = useState([])\n    function addToWatchlist() {\n        axios.post(\"/watchlist\", companyInfo)\n            .then(res => setAddTicker(prevTicker => [...prevTicker, res.data]))\n            // .then(res => console.log(res))\n            .catch(err => console.log(err))\n    }\n    // }axios.post(\"/api/stocks\")\n    // symbol: currState[\"Global Quote\"][\"01. symbol\"],\\\n    // open: currState[\"Global Quote\"][\"02. open\"]\n    // price: anotherState[\"Time Series (Daily)\"][\"2021-11-03\"][\"2. high\"]\n\n    // axios.post(\"/api/stocks\", {\n    //     symbol: currState[\"Global Quote\"][\"01. symbol\"],\n    //     open: currState[\"Global Quote\"][\"02. open\"],\n    //     price: anotherState[\"Time Series (Daily)\"][\"2021-11-03\"][\"2. high\"]\n    // })\n\n    const [tickersForWatchlist, setTickersForWatchlist] = useState([])\n    useEffect(() => {\n        axios.get(\"/watchlist\")\n            .then(res => setTickersForWatchlist(res.data))\n            .catch(err => console.log(err))\n    }, [addTicker])\n    // console.log(tickersForWatchlist) // this gives meta data = ticker symbol info\n    const deleteStockFromWatchlist = (stockId) => {\n        axios.delete(`http://localhost:7007/watchlist/${stockId}`)\n            .then(res => {\n                let filterWatchlist = tickersForWatchlist.filter(stock => stock._id !== stockId)\n                setTickersForWatchlist(filterWatchlist)\n            })\n            .catch(err => console.log(err))\n    }\n    // const [tickerOnly, setTickerOnly] = useState([])\n    // const addTickerOnly = () => {\n    //     axios.post(\"/watchlist\", stockData)\n    //         .then(res => setTickerOnly(prevTicker => [...prevTicker, res.data]))\n    //         .catch(err => console.log(err))\n    // }\n    // console.log(stockData)\n    // console.log(tickerOnly)\n\n    const sdArray = []\n    // const ciArray = []\n    const forEachSD = (isLoadingSD && Object?.entries(stockData)?.forEach(([key, val]) => {\n        return (\n            sdArray.push([key, val])\n        )\n    }))\n    // {ticker: \"\"}\n    // { symbol: \"MSFT\"}\n    \n    const mapSD = (isLoadingSD && sdArray?.map((x, index) => <TickerSearch x={x} key={index}/>))\n\n    // const forEachCI = (isLoadingCI && Object?.entries(companyInfo).forEach(([key, val]) => {\n    //     return (\n    //         ciArray.push([key, val])\n    //     )\n    // }))\n    // const mapCI = (isLoadingCI && ciArray?.map((y, index) => <TickerSearch y={y} key={index}/>))\n\n    const symbol = (isLoadingCN && companyName[\"Symbol\"])\n    const name = (isLoadingCN && companyName[\"Name\"])\n    const high = companyName[\"52WeekHigh\"]\n    const low = companyName[\"52WeekLow\"]\n    const yearEnd = companyName[\"FiscalYearEnd\"]\n    const quarter = companyName[\"LatestQuarter\"]\n\n    return (\n        <StockContext.Provider value = {{\n            \n            mapSD,\n            forEachSD, \n            quarter,\n            yearEnd,\n            low,\n            high,\n            name,\n            symbol,\n            tickerData, \n            stockData,\n            coName,\n            coInfo,\n            isLoadingCI,\n            isLoadingSD,\n            isLoadingCN,\n            handleChange, \n            handleSubmit,\n            ticker,\n            companyName,\n            companyInfo,\n \n            addTicker,\n            addToWatchlist,\n            tickersForWatchlist,\n            deleteStockFromWatchlist,\n\n        }}>\n            {props.children}\n        </StockContext.Provider>\n    )\n}\n\nexport { StockContext, StockContextProvider }\n\n// INFarray,\n// CPIarray,\n// TYarray,","import React, {useContext} from \"react\"\nimport {StockContext} from \"../contexts/ContextProvider\"\n\nfunction TickerSearchmap(props) {\n\n    const context = useContext(StockContext)\n    function twoFunctions() {\n        return (\n            context.addToWatchlist()\n        )\n    }\n    return (\n        <div>\n            <h1>Stock Search: </h1>\n            <form onSubmit={(event) => {\n                event.preventDefault()\n                context.handleSubmit()    \n            }}>\n                <input placeholder=\"Ticker Symbol\" type=\"text\" name=\"ticker\" value={context.ticker.ticker} onChange={context.handleChange}/>\n                <button type=\"submit\">Search</button>\n            </form>\n            <h1 style={{color: \"red\"}}>Company: {context.name}</h1>\n            <h1 style={{color: \"blue\"}}>Ticker Symbol: {context.symbol}</h1>\n            <div style={{display: \"flex\", justifyContent: \"space-around\", color: \"purple\"}}>\n                <h2>52 Week High: {context.high}</h2>\n                <h2>52 Week Low: {context.low}</h2>\n                <h2>Fiscal Year End: {context.yearEnd}</h2>\n                <h2>Latest Quarter: {context.quarter}</h2>  \n            </div>\n            <button style={{padding: \"10px\", fontSize: \"16px\", backgroundColor: \"lightblue\"}} onClick={() => twoFunctions()}>Add to Watchlist</button>\n            <br />\n            <br />\n            <table  style={{borderSpacing: \"0\", borderCollapse: \"collapse\", margin: \"0 auto\"}}>\n                <tbody>\n                    {context.forEachSD}            \n                    {context.mapSD}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default TickerSearchmap\n\n","import React from \"react\"\n\nfunction CPI(props) {\n    const CPIvalue = Math.round(props.item.value * 100) / 100\n    return (\n        <tr>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px\", \n                height: \"20px\",\n                width: \"140px\", \n                backgroundColor: \"lightgreen\"}}>Date: {props.item.date}\n            </td>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px\", \n                height: \"20px\",\n                width: \"110px\", \n                backgroundColor: \"lightgreen\"}}>Value: {CPIvalue}\n            </td>\n        </tr>\n    )\n}\n\nexport default CPI","import React, { useEffect, useState} from \"react\"\n// import {StockContext} from \"../contexts/ContextProvider\"\nimport CPI from \"./CPI\"\nimport axios from \"axios\"\n\nfunction CPImap() {\n\n    const [CPIarray, setCPIArray] = useState([])\n    useEffect(() => {\n        axios.get(\"https://www.alphavantage.co/query?function=CPI&interval=monthly&apikey=HOEHM6SOJN8NYJWX\" )\n            .then(response => {\n                console.log(response.data)\n                setCPIArray(response.data.data)\n            })\n    }, [])\n\n    // const context = useContext(StockContext)\n    const mapCPI = CPIarray?.map(item => <CPI item={item} key={item.date+item.value}/>)\n\n    return (\n        <table  style={{borderSpacing: \"0\", borderCollapse: \"collapse\", margin: \"0 auto\"}}>\n            <tbody>\n                {mapCPI}\n            </tbody>\n        </table>\n    )\n}\n\nexport default CPImap","import React from \"react\"\n\nfunction Inflation(props) {\n    const INFvalue = Math.round(props.thing.value * 1000) / 1000\n\n    return (\n        <tr>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px\", \n                height: \"20px\",\n                width: \"140px\", \n                backgroundColor: \"lightblue\"}}>Date: {props.thing.date}\n            </td>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px\", \n                height: \"20px\",\n                width: \"110px\", \n                backgroundColor: \"lightblue\"}}>Value: {INFvalue}\n            </td>\n        </tr>\n    )\n}\n\nexport default Inflation","import React, {useState, useEffect} from \"react\"\n// import {StockContext} from \"../contexts/ContextProvider\"\nimport Inflation from \"./Inflation\"\nimport axios from \"axios\"\n\nfunction CPImap() {\n\n    const [INFarray, setINFArray] = useState([])\n    useEffect(() => {\n        axios.get(\"https://www.alphavantage.co/query?function=INFLATION&apikey=HOEHM6SOJN8NYJWX\" )\n            .then(response => {\n                // console.log(response.data)\n                setINFArray(response.data.data)\n            })\n    },[])\n\n    // const context = useContext(StockContext)\n    const mapInf = INFarray?.map(thing => <Inflation thing={thing} key={thing.date+thing.value}/>)\n    \n    return (\n        <table  style={{borderSpacing: \"0\", borderCollapse: \"collapse\", margin: \"0 auto\"}}>\n            <tbody>\n                {mapInf}\n            </tbody>\n        </table>\n    )\n}\n\nexport default CPImap","import React from \"react\"\n\nfunction TreasuryYield(props) {\n    // const TYvalue = Math.round(props.yield.value * 1000) / 1000\n    return (\n        <tr>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px\", \n                height: \"20px\",\n                width: \"140px\", \n                backgroundColor: \"burlywood\"}}>Date: {props.x.date}\n            </td>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px\", \n                height: \"20px\",\n                width: \"110px\", \n                backgroundColor: \"burlywood\"}}>Value: {props.x.value}\n            </td>\n        </tr>\n    )\n}\n\nexport default TreasuryYield","import React, {useState, useEffect} from \"react\"\n// import {StockContext} from \"../contexts/ContextProvider\"\nimport TreasuryYield from \"./TreasuryYield\"\nimport axios from \"axios\"\n\nfunction TreasuryYieldmap() {\n\n    const [TYarray, setTYArray] = useState([])\n    useEffect(() => {\n        axios.get(\"https://www.alphavantage.co/query?function=TREASURY_YIELD&interval=monthly&maturity=10year&apikey=HOEHM6SOJN8NYJWX\" )\n            .then(response => {\n                // console.log(response.data)\n                setTYArray(response.data.data)\n            })\n    },[])\n\n    // const context = useContext(StockContext)\n    const mapTY = TYarray?.map(x => <TreasuryYield x={x} key={x.date+x.value}/>)\n    \n    return (\n        <table  style={{borderSpacing: \"0\", borderCollapse: \"collapse\", margin: \"0 auto\"}}>\n            <tbody>\n                {mapTY}\n            </tbody>\n        </table>\n    )\n}\n\nexport default TreasuryYieldmap","import React from \"react\"\nimport CPImap from \"./CPImap\"\nimport Inflationmap from \"./Inflationmap\"\nimport \"./EcoIndicators.css\"\nimport TreasuryYieldmap from \"./TreasuryYieldmap\"\n\nfunction EcoIndicators() {\n\n    return (\n        <div className=\"EcoIndicators\">\n            <div className=\"CPI\" style={{margin: \"5px\"}}>\n                <h2 style={{color: \"green\"}}>Monthly CPI:</h2>\n                <CPImap />\n            </div>\n            <div className=\"Inflation\" style={{margin: \"5px\"}}>\n                <h2 style={{color: \"royalblue\"}}>Annual Inflation: </h2>\n                <Inflationmap />\n            </div>\n            <div className=\"TreasuryYield\" style={{margin: \"5px\"}}>\n                <h2 style={{color: \"saddlebrown\"}}>Monthly Treasury Yield: </h2>\n                <TreasuryYieldmap />\n            </div>\n        </div>\n    )\n}\n\nexport default EcoIndicators","import React, {useContext} from \"react\"\nimport {StockContext} from \"../contexts/ContextProvider\"\n\nfunction WatchList(props) {\n    const context = useContext(StockContext)\n    return (\n        <tr>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px 0px\", \n                height: \"30px\",\n                maxWidth: \"160px\",\n                width: \"160px\", \n                backgroundColor: \"palevioletred\"}}>\n                \n                Ticker: {props.stock[\"Global Quote\"][\"01\"][\" symbol\"]}\n                \n            </td>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px 0px\", \n                height: \"30px\",\n                maxWidth: \"160px\",\n                width: \"160px\", \n                backgroundColor: \"palevioletred\"}}>\n                \n                Open: {(props.stock[\"Global Quote\"][\"02\"][\" open\"]) * 100 / 100}\n                \n            </td>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px 0px\", \n                height: \"30px\",\n                maxWidth: \"160px\",\n                width: \"160px\", \n                backgroundColor: \"palevioletred\"}}>\n                \n                Close: {(props.stock[\"Global Quote\"][\"05\"][\" price\"]) * 100 / 100}\n                \n            </td>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px 0px\", \n                height: \"30px\",\n                maxWidth: \"160px\",\n                width: \"160px\", \n                backgroundColor: \"palevioletred\"}}>\n                \n                Previous Close: {(props.stock[\"Global Quote\"][\"08\"][\" previous close\"]) * 100 / 100}\n                \n            </td>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px 0px\", \n                height: \"30px\",\n                maxWidth: \"160px\",\n                width: \"160px\", \n                backgroundColor: \"palevioletred\"}}>\n                \n                Change: {(props.stock[\"Global Quote\"][\"09\"][\" change\"]) * 1000 / 1000}\n                \n            </td>\n            <td style={{\n                border: \"1px solid black\", \n                padding: \"10px 0px\", \n                height: \"30px\",\n                maxWidth: \"160px\",\n                width: \"160px\", \n                backgroundColor: \"palevioletred\"}}>\n                \n                Percent Change: {props.stock[\"Global Quote\"][\"10\"][\" change percent\"]}</td>\n            <td><button style={{padding: \"10px\", fontSize: \"16px\", backgroundColor: \"lightblue\"}} onClick={() => context.deleteStockFromWatchlist(props.stock._id)}>\n                \n                Delete \n            </button></td>  \n        </tr>\n    )\n}\n\nexport default WatchList","import React,{useContext} from \"react\"\nimport {StockContext} from \"../contexts/ContextProvider\"\nimport WatchList from \"./WatchList\"\n\nfunction WatchListmap() {\n    const context = useContext(StockContext)\n\n    const list = context.tickersForWatchlist.map(stock => <WatchList stock={stock} key={stock._id}/>)\n\n    return (\n        <div>\n            <h1>Watchlist (most recent information): </h1>\n            <table  style={{borderSpacing: \"0\", borderCollapse: \"collapse\", margin: \"0 auto\"}}>\n                <tbody>\n                    {list}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default WatchListmap","import './App.css';\nimport React, {useState} from \"react\"\nimport { Link, Route, Switch } from \"react-router-dom\"\nimport Home from \"./components/Home\"\nimport TickerSearchmap from \"./components/TickerSearchmap\"\nimport EcoIndicators from \"./components/EcoIndicators\"\nimport WatchListmap from \"./components/WatchListmap\"\n\n\nconst App = () => {\n \n  return (\n    <div className=\"App\">\n\n      <nav className=\"navbar\">\n        <h1>Welcome to TradeView!</h1>\n        <div className=\"links\">\n          <Link to=\"/\" className=\"navbarLinks\">Home</Link>\n          <Link to=\"/tickersearch\" className=\"navbarLinks\">Stock Search</Link>\n          <Link to=\"/indicators\" className=\"navbarLinks\">Economic Indicators</Link>\n          <Link to=\"/watchlist\" className=\"navbarLinks\">Watchlist</Link>\n          <div></div> \n        </div>\n      </nav>\n      <br />\n      <br />\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/tickersearch\">\n              <TickerSearchmap />\n          </Route>\n          <Route exact path=\"/indicators\">\n            <EcoIndicators />\n          </Route>\n          <Route exact path=\"/watchlist\">\n            <WatchListmap />\n          </Route>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { StockContextProvider } from \"./contexts/ContextProvider\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <StockContextProvider>\n        <App />\n      </StockContextProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}